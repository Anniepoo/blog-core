{"version":3,"file":"bundle.js","sources":["/home/raivo/blog-core/admin/node_modules/browserify/node_modules/browser-pack/_prelude.js","/home/raivo/blog-core/admin/admin.js","/home/raivo/blog-core/admin/controller/auth.js","/home/raivo/blog-core/admin/controller/post.js","/home/raivo/blog-core/admin/controller/file.js","/home/raivo/blog-core/admin/controller/user.js","/home/raivo/blog-core/admin/controller/comment.js","/home/raivo/blog-core/admin/hex.js","/home/raivo/blog-core/admin/api.js","/home/raivo/blog-core/admin/menu.js","/home/raivo/blog-core/admin/message.js","/home/raivo/blog-core/admin/xhr.js","/home/raivo/blog-core/admin/view.js","/home/raivo/blog-core/admin/validate.js","/home/raivo/blog-core/admin/vm/post_vm.js","/home/raivo/blog-core/admin/vm/user_vm.js","/home/raivo/blog-core/admin/spin.js"],"names":["auth","require","post","file","user","comment","hex","api","menu","message","ko","subscribable","fn","trimmed","computed","read","this","trim","write","value","valueHasMutated","owner","route","active","list","catch","error","id","edit","type","create","go","directory","string","filename","form","hasKey","view","validate","exports","model","username","observable","password","login","clear","hasError","then","res","status","sessionStorage","setItem","data","key","formError","done","show","postVm","mytype","getItem","myid","posts","sort","post1","post2","date_updated","forEach","expanded","expand","editable","author","remove","confirm","removePost","$id","response","info","refresh","start","observableArray","hasMore","length","more","end","Math","min","i","push","slice","users","editor","document","getElementById","style","height","scrollHeight","compareEntry","entry1","entry2","compareName","name","entries","entry","encoded","parent","tokens","split","join","subdirectory","subdirectory_form","upload_form","progress","addSubdirectory","createDirectory","showSubdirectoryForm","cancelDirectoryForm","removeDirectory","upload","files","reader","FileReader","onload","xhr","XMLHttpRequest","addEventListener","uploadProgress","uploadComplete","uploadFailed","uploadCanceled","open","encodeURIComponent","window","btoa","setRequestHeader","apiKey","send","Uint8Array","result","readAsArrayBuffer","e","lengthComputable","round","loaded","total","showUploadForm","cancelUploadForm","size","date","modified","removeFile","userVm","removeUser","entryInfo","comments","removeComment","title","charCodeAt","toString","String","fromCharCode","parseInt","substr","options","method","url","JSON","stringify","headers","Content-Type","parse","X-Key","updatePost","savePost","updateUser","saveUser","Error","visible","applyBindings","text","messages","createElement","className","innerHTML","appendChild","setTimeout","removeChild","err","button","spin","count","module","deferred","Q","defer","req","Object","keys","onreadystatechange","readyState","hide","reject","resolve","responseText","promise","content","console","log","children","removeNode","wrap","formatDate","ts","Date","toISOString","substring","errors","querySelectorAll","item","parentNode","classList","elem","add","insertBefore","findAuthor","authors","isoDateToUnix","match","setUTCHours","setUTCFullYear","floor","getTime","validatePost","slug","published","update","submitPost","toJS","scroll","description","content_type","commenting","tags","author_selectable","submit","save","date_published","d","subscribe","speakingurl","fullname","link","password_edit","password_text","creating","js","display"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var auth = require('./controller/auth');\nvar post = require('./controller/post');\nvar file = require('./controller/file');\nvar user = require('./controller/user');\nvar comment = require('./controller/comment');\nvar hex = require('./hex');\nvar api = require('./api');\nvar menu = require('./menu');\nvar message = require('./message');\n\n// Helper to trim whitespace from values.\n\nko.subscribable.fn.trimmed = function() {\n\n    return ko.computed({\n\n        read: function() {\n\n            return this().trim();\n        },\n\n        write: function(value) {\n\n            this(value.trim());\n            this.valueHasMutated();\n        },\n\n        owner: this\n    });\n};\n\nroute(/^posts/, function() {\n\n    menu.active('posts');\n    post.list('post').catch(message.error);\n});\n\nroute(/^pages/, function() {\n\n    menu.active('pages');\n    post.list('page').catch(message.error);\n});\n\nroute(/^blocks/, function() {\n\n    menu.active('blocks');\n    post.list('block').catch(message.error);\n});\n\nroute(/^post\\/([^\\/]+)/, function(id) {\n\n    menu.active('posts');\n    post.edit(id).catch(message.error);\n});\n\nroute(/^page\\/([^\\/]+)/, function(id) {\n\n    menu.active('pages');\n    post.edit(id).catch(message.error);\n});\n\nroute(/^block\\/([^\\/]+)/, function(id) {\n\n    menu.active('blocks');\n    post.edit(id).catch(message.error);\n});\n\nroute(/^new\\/([^\\/]+)/, function(type) {\n\n    menu.active(type + 's');\n    post.create(type).catch(message.error);\n});\n\nroute(/^files/, function() {\n\n    menu.active('files');\n    route.go('directory/' + hex.hex('/'));\n});\n\nroute(/^directory\\/([^\\/]+)/, function(directory) {\n\n    menu.active('files');\n    file.directory(hex.string(directory)).catch(message.error);\n});\n\nroute(/^file\\/([^\\/]+)/, function(filename) {\n\n    menu.active('files');\n    file.file(hex.string(filename)).catch(message.error);\n});\n\nroute(/^comments\\/([^\\/]+)/, function(id) {\n\n    menu.active('posts');\n    comment.list(id).catch(message.error);\n});\n\nroute(/^users/, function() {\n\n    menu.active('users');\n    user.list().catch(message.error);\n});\n\nroute(/^user\\/new/, function() {\n\n    menu.active('users');\n    user.create().catch(message.error);\n});\n\nroute(/^user\\/([^\\/]+)/, function(id) {\n\n    menu.active('users');\n    user.edit(id).catch(message.error);\n});\n\nroute(/^login/, function() {\n\n    menu.active();\n    auth.form().catch(message.error);\n});\n\nroute(/.*/, function() {\n\n    route.go(api.hasKey() ? 'posts' : 'login');\n});\n","var view = require('../view');\nvar api = require('../api');\nvar message = require('../message');\nvar validate = require('../validate');\n\nexports.form = function() {\n\n    var model = {\n\n        username: ko.observable(''),\n        password: ko.observable(''),\n\n        login: function(form) {\n\n            validate.clear(form);\n\n            var username = model.username();\n            var password = model.password();\n\n            if (username === '') {\n\n                validate.error('username', 'Username is not entered.');\n            }\n\n            if (password === '') {\n\n                validate.error('password', 'Password is not entered.');\n            }\n\n            if (validate.hasError(form)) {\n\n                return false;\n            }\n\n            api.login(username, password).then(function(res) {\n\n                if (res.status === 'success') {\n\n                    sessionStorage.setItem('api-key', res.data.key);\n                    sessionStorage.setItem('user-id', res.data.id);\n                    sessionStorage.setItem('user-type', res.data.type);\n\n                    route.go('posts');\n\n                } else {\n\n                    validate.formError(form, res.message);\n                }\n\n            }, message.error).done();\n        }\n    };\n\n    return view.show('login', model);\n};\n","var view = require('../view');\nvar api = require('../api');\nvar message = require('../message');\nvar postVm = require('../vm/post_vm');\n\nexports.list = function(type) {\n\n    var mytype = sessionStorage.getItem('user-type');\n\n    var myid = sessionStorage.getItem('user-id');\n\n    return api.posts(type).then(function(posts) {\n\n        posts.sort(function(post1, post2) {\n\n            return post2.date_updated - post1.date_updated;\n        });\n\n        posts.forEach(function(post) {\n\n            post.expanded = ko.observable(false);\n\n            post.expand = function() {\n\n                if (post.expanded()) {\n\n                    post.expanded(false);\n\n                } else {\n\n                    post.expanded(true);\n                }\n            };\n\n            post.editable = mytype === 'admin' || myid === post.author;\n\n            post.remove = function() {\n\n                if (confirm('Remove the post?')) {\n\n                    api.removePost(post.$id).then(function(response) {\n\n                        if (response.status === 'success') {\n\n                            message.info('The post was removed.');\n\n                            route.refresh();\n\n                        } else {\n\n                            message.error(response.message);\n                        }\n\n                    }, message.error).done();\n                }\n            };\n        });\n\n        var start = 0;\n\n        var model = {\n\n            type: type,\n\n            posts: ko.observableArray([]),\n\n            hasMore: ko.observable(start + 5 < posts.length),\n\n            more: function() {\n\n                start += 5;\n\n                var end = Math.min(start + 5, posts.length);\n\n                for (var i = start; i < end; i++) {\n\n                    model.posts.push(posts[i]);\n                }\n\n                model.hasMore(start + 5 < posts.length);\n            }\n        };\n\n        model.posts(posts.slice(0, 5));\n\n        view.show('posts', model);\n    });\n};\n\nexports.edit = function(id) {\n\n    return api.users().then(function(users) {\n\n        return api.post(id).then(function(post) {\n\n            return view.show('post', postVm.create(users, post)).then(function() {\n\n                // Autoset initial textarea height.\n\n                var editor = document.getElementById('post-content');\n\n                editor.style.height = (editor.scrollHeight + 10) + 'px';\n            });\n        });\n    });\n};\n\nexports.create = function(type) {\n\n    return api.users().then(function(users) {\n\n        var model = postVm.create(users);\n\n        model.type(type);\n\n        return view.show('post', model);\n    });\n};\n","var view = require('../view');\nvar api = require('../api');\nvar hex = require('../hex');\nvar message = require('../message');\n\n// Comparator function to sort\n// directories before files and both\n// then by name.\n\nfunction compareEntry(entry1, entry2) {\n\n    // Compares directory entries by name.\n\n    function compareName() {\n\n        return entry1.name < entry2.name ? -1 : 1;\n    }\n\n    if (entry1.directory) {\n\n        if (entry2.directory) {\n\n            return compareName();\n\n        } else {\n\n            return -1;\n        }\n\n    } else {\n\n        if (entry2.directory) {\n\n            return 1;\n\n        } else {\n\n            return compareName();\n        }\n    }\n}\n\nexports.directory = function(directory) {\n\n    return api.directory(directory).then(function(entries) {\n\n        entries.sort(compareEntry);\n\n        entries.forEach(function(entry) {\n\n            entry.encoded = hex.hex((directory === '/' ? '' : directory) + '/' + entry.name);\n        });\n\n        var parent = '/';\n\n        if (directory !== '/') {\n\n            var tokens = directory.split(/\\//);\n\n            parent = hex.hex('/' + tokens.slice(1, tokens.length - 1).join('/'));\n        }\n\n        var model = {\n\n            directory: directory,\n            entries: entries,\n            subdirectory: ko.observable('').trimmed(),\n            subdirectory_form: ko.observable(false),\n            upload_form: ko.observable(false),\n            parent: parent,\n            progress: ko.observable(0),\n\n            addSubdirectory: function() {\n\n                api.createDirectory(directory, model.subdirectory()).then(function(response) {\n\n                    if (response.status === 'success') {\n\n                        route.refresh();\n                    }\n                });\n            },\n\n            showSubdirectoryForm: function() {\n\n                model.subdirectory_form(true);\n                model.upload_form(false);\n            },\n\n            cancelDirectoryForm: function() {\n\n                model.subdirectory_form(false);\n            },\n\n            removeDirectory: function() {\n\n                if (confirm('Remove current directory?')) {\n\n                    api.removeDirectory(directory).then(function(response) {\n\n                        if (response.status === 'success') {\n\n                            message.info('Directory successfully removed.');\n\n                            route.go('directory/' + parent);\n                        }\n                    });\n                }\n            },\n\n            upload: function(form) {\n\n                var file = document.getElementById('directory-file').files[0];\n\n                if (file) {\n\n                    var reader = new FileReader();\n\n                    reader.onload = function() {\n\n                        var xhr = new XMLHttpRequest();\n\n                        xhr.upload.addEventListener('progress', model.uploadProgress, false);\n\n                        xhr.addEventListener('load', model.uploadComplete, false);\n                        xhr.addEventListener('error', model.uploadFailed, false);\n                        xhr.addEventListener('abort', model.uploadCanceled, false);\n\n                        xhr.open('POST', '/api/upload/' + encodeURIComponent(window.btoa(directory)));\n\n                        xhr.setRequestHeader('X-Key', api.apiKey());\n                        xhr.setRequestHeader('X-File-Name', file. name);\n                        xhr.setRequestHeader('Content-Type', 'application/octet-stream');\n\n                        xhr.send(new Uint8Array(reader.result));\n                    };\n\n                    reader.readAsArrayBuffer(file);\n                }\n            },\n\n            uploadProgress: function(e) {\n\n                if (e.lengthComputable) {\n\n                    model.progress(Math.round(e.loaded * 100 / e.total));\n                }\n            },\n\n            uploadComplete: function() {\n\n                route.refresh();\n                message.info('File uploaded.');\n            },\n\n            uploadFailed: function() {\n\n\n            },\n\n            uploadCanceled: function() {\n\n                model.upload_form(false);\n            },\n\n            showUploadForm: function() {\n\n                model.upload_form(true);\n                model.subdirectory_form(false);\n            },\n\n            cancelUploadForm: function() {\n\n                model.upload_form(false);\n            }\n        };\n\n        return view.show('directory', model);\n    });\n};\n\nexports.file = function(file) {\n\n    return api.file(file).then(function(response) {\n\n        var tokens = file.split(/\\//);\n\n        var parent = hex.hex('/' + tokens.slice(1, tokens.length - 1).join('/'));\n\n        var model = {\n\n            file: file,\n            parent: parent,\n            size: response.data.size,\n            date: response.data.modified,\n\n            remove: function() {\n\n                if (confirm('Remove file ' + file + '?')) {\n\n                    api.removeFile(file).then(function(response) {\n\n                        if (response.status === 'success') {\n\n                            message.info('File removed.');\n\n                            route.go('directory/' + parent);\n                        }\n                    });\n                }\n            }\n        };\n\n        return view.show('file', model);\n    });\n};\n","var api = require('../api');\nvar view = require('../view');\nvar message = require('../message');\nvar userVm = require('../vm/user_vm');\n\nexports.list = function() {\n\n    var mytype = sessionStorage.getItem('user-type');\n    var myid = sessionStorage.getItem('user-id');\n\n    return api.users().then(function(users) {\n\n        users.forEach(function(user) {\n\n            user.expanded = ko.observable(false);\n\n            user.expand = function() {\n\n                if (user.expanded()) {\n\n                    user.expanded(false);\n\n                } else {\n\n                    user.expanded(true);\n                }\n            };\n\n            user.remove = function() {\n\n                if (confirm('Remove the user?')) {\n\n                    api.removeUser(user.$id).then(function(response) {\n\n                        if (response.status === 'success') {\n\n                            message.info('The user was removed.');\n\n                            route.refresh();\n\n                        } else {\n\n                            message.error(response.message);\n                        }\n\n                    }, message.error).done();\n                }\n            };\n\n            user.editable = mytype === 'admin' || user.$id === myid;\n        });\n\n        var model = { users: users, mytype: mytype };\n\n        return view.show('users', model);\n\n    }, message.error);\n};\n\nexports.edit = function(id) {\n\n    return api.user(id).then(function(user) {\n\n        return view.show('user', userVm.create(user));\n\n    }, message.error);\n};\n\nexports.create = function() {\n\n    return view.show('user', userVm.create());\n};\n","var message = require('../message');\nvar view = require('../view');\nvar api = require('../api');\n\nexports.list = function(id) {\n\n    return api.entryInfo(id).then(function(info) {\n\n        return api.comments(id).then(function(comments) {\n\n            comments.forEach(function(comment) {\n\n                comment.expanded = ko.observable(false);\n\n                comment.expand = function() {\n\n                    if (comment.expanded()) {\n\n                        comment.expanded(false);\n\n                    } else {\n\n                        comment.expanded(true);\n                    }\n                };\n\n                comment.remove = function() {\n\n                    if (confirm('Remove the comment?')) {\n\n                        api.removeComment(comment.$id).then(function(response) {\n\n                            if (response.status === 'success') {\n\n                                route.refresh();\n\n                            } else {\n\n                                message.error(response.message);\n                            }\n\n                        }, message.error);\n                    }\n                };\n            });\n\n            var model = {\n\n                title: info.title,\n                comments: comments\n            };\n\n            return view.show('comments', model);\n        });\n    });\n};\n","exports.hex = function(string) {\n\n    var hex = '';\n\n    for(var i = 0; i < string.length; i++) {\n\n        hex += string.charCodeAt(i).toString(16);\n    }\n\n    return hex;\n};\n\nexports.string = function(hex) {\n\n    if (typeof hex !== 'string') {\n\n        hex = hex.toString();\n    }\n\n    var string = '';\n\n    for (var i = 0; i < hex.length; i += 2) {\n\n        string += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n    }\n\n    return string;\n};\n","var xhr = require('./xhr');\n\nexports.login = function(username, password) {\n\n    var options = {\n\n        method: 'POST',\n\n        url: '/api/auth',\n\n        data: JSON.stringify({\n\n            username: username,\n            password: password\n        }),\n\n        headers: {\n\n            'Content-Type': 'application/json'\n        }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\nexports.posts = function(type) {\n\n    var options = {\n\n        url: '/api/entries/' + type,\n\n        headers: {\n\n            'X-Key': apiKey()\n        }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response).data;\n    });\n};\n\nexports.post = function(id) {\n\n    var options = {\n\n        url: '/api/entry/' + encodeURIComponent(id),\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response).data;\n    });\n};\n\nexports.entryInfo = function(id) {\n\n    var options = {\n\n        url: '/api/entry/' + encodeURIComponent(id) + '/info',\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response).data;\n    });\n};\n\n// Retrieves the given post comments.\n\nexports.comments = function(id) {\n\n    var options = {\n\n        url: '/api/post/' + encodeURIComponent(id) + '/comments',\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response).data;\n    });\n};\n\n// Removes the given comment.\n\nexports.removeComment = function(id) {\n\n    var options = {\n\n        method: 'DELETE',\n\n        url: '/api/comment/' + encodeURIComponent(id),\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\nexports.updatePost = function(id, data) {\n\n    var options = {\n\n        method: 'PUT',\n\n        url: '/api/entry/' + id,\n\n        data: JSON.stringify(data),\n\n        headers: { 'X-Key': apiKey(), 'Content-Type': 'application/json' }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\nexports.savePost = function(data) {\n\n    var options = {\n\n        method: 'POST',\n\n        url: '/api/entry',\n\n        data: JSON.stringify(data),\n\n        headers: { 'X-Key': apiKey(), 'Content-Type': 'application/json' }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\n// Removes the given post.\n\nexports.removePost = function(id) {\n\n    var options = {\n\n        method: 'DELETE',\n\n        url: '/api/entry/' + encodeURIComponent(id),\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\nexports.directory = function(directory) {\n\n    var options = {\n\n        url: '/api/directory/' + encodeURIComponent(window.btoa(directory)),\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response).data;\n    });\n};\n\nexports.createDirectory = function(directory, subdirectory) {\n\n    var options = {\n\n        method: 'POST',\n\n        url: '/api/directory/' + encodeURIComponent(window.btoa(directory)) + '/' +\n            encodeURIComponent(subdirectory),\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\nexports.removeDirectory = function(directory) {\n\n    var options = {\n\n        method: 'DELETE',\n\n        url: '/api/directory/' + encodeURIComponent(window.btoa(directory)),\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\n// Retrieves file metainfo.\n\nexports.file = function(file) {\n\n    var options = {\n\n        url: '/api/file/' + encodeURIComponent(window.btoa(file)),\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\n// Removes the given file.\n\nexports.removeFile = function(file) {\n\n    var options = {\n\n        method: 'DELETE',\n\n        url: '/api/file/' + encodeURIComponent(window.btoa(file)),\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\n// Retrieves all users.\n\nexports.users = function() {\n\n    var options = {\n\n        url: '/api/users',\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response).data;\n    });\n};\n\n// Retrieves the given user.\n\nexports.user = function(id) {\n\n    var options = {\n\n        url: '/api/user/' + encodeURIComponent(id),\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response).data;\n    });\n};\n\n// Updates the given user.\n\nexports.updateUser = function(id, data) {\n\n    var options = {\n\n        method: 'PUT',\n\n        data: JSON.stringify(data),\n\n        url: '/api/user/' + encodeURIComponent(id),\n\n        headers: { 'X-Key': apiKey(), 'Content-Type': 'application/json' }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\n// Saves the new user.\n\nexports.saveUser = function(data) {\n\n    var options = {\n\n        method: 'POST',\n\n        data: JSON.stringify(data),\n\n        url: '/api/user',\n\n        headers: { 'X-Key': apiKey(), 'Content-Type': 'application/json' }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\n// Removes the given user.\n\nexports.removeUser = function(id) {\n\n    var options = {\n\n        method: 'DELETE',\n\n        url: '/api/user/' + encodeURIComponent(id),\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\n// Checks whether the API key has been set.\n\nexports.hasKey = function() {\n\n    return !!sessionStorage.getItem('api-key');\n};\n\nvar apiKey = exports.apiKey = function() {\n\n    var key = sessionStorage.getItem('api-key');\n\n    if (!key) {\n\n        throw new Error('API key is not set');\n    }\n\n    return key;\n};\n","var model = {\n\n    visible: ko.observable(false),\n    active: ko.observable()\n};\n\nexports.active = function(name) {\n\n    if (name) {\n\n        model.active(name);\n        model.visible(true);\n\n    } else {\n\n        model.active();\n        model.visible(false);\n    }\n};\n\nvar menu = document.getElementById('menu');\n\nko.applyBindings(model, menu);\n","// Shows informational message.\n\nexports.info = function(text) {\n\n    var messages = document.getElementById('messages');\n    var message = document.createElement('div');\n\n    message.className = 'alert alert-success message';\n    message.innerHTML = text;\n\n    messages.appendChild(message);\n\n    setTimeout(function() {\n\n        messages.removeChild(message);\n\n    }, 2000);\n};\n\n// Shows error message.\n\nexports.error = function(err) {\n\n    var button = document.createElement('button');\n\n    button.className = 'close';\n    button.innerHTML = '&times;';\n\n    var text = document.createElement('span');\n    text.innerHTML = err.toString();\n\n    var messages = document.getElementById('messages');\n    var message = document.createElement('div');\n\n    message.className = 'alert alert-danger message';\n    message.appendChild(button);\n    message.appendChild(text);\n\n    button.addEventListener('click', function() {\n\n        messages.removeChild(message);\n\n    }, false);\n\n    messages.appendChild(message);\n};\n","var spin = require('./spin');\n\n// From https://gist.github.com/matthewp/3099268\n\nvar count = 0;\n\nmodule.exports = function(options) {\n\n    var deferred = Q.defer();\n\n    var req = new XMLHttpRequest();\n\n    req.open(options.method || 'GET', options.url, true);\n\n    Object.keys(options.headers || {}).forEach(function (key) {\n\n        req.setRequestHeader(key, options.headers[key]);\n    });\n\n    req.onreadystatechange = function(e) {\n\n        if (req.readyState !== 4) {\n\n            return;\n        }\n\n        count -= 1;\n\n        if (count === 0) {\n\n            spin.hide();\n        }\n\n        if (req.status !== 200) {\n\n            deferred.reject(new Error('Server responded with a status of ' + req.status));\n\n        } else {\n\n            deferred.resolve(req.responseText);\n        }\n    };\n\n    if (count === 0) {\n\n        spin.show();\n    }\n\n    count += 1;\n\n    req.send(options.data);\n\n    return deferred.promise;\n};\n","var xhr = require('./xhr');\n\nvar content = document.getElementById('content');\n\nexports.show = function(name, model) {\n\n    console.log('Loading template ' + name);\n\n    // Load template, turn into DOM, bind with KnockoutJS.\n\n    return xhr({ url: '/admin/tpl/' + name + '.html' }).then(function(response) {\n\n        if (content.children.length === 1) {\n\n            // Something was previously shown,\n            // remove it.\n\n            ko.removeNode(content.children[0]);\n        }\n\n        var wrap = document.createElement('div');\n\n        wrap.innerHTML = response;\n\n        content.appendChild(wrap);\n\n        ko.applyBindings(model, wrap);\n    });\n};\n\nwindow.formatDate = function(ts) {\n\n    return new Date(1000 * ts).toISOString().substring(0, 10);\n};\n","// Cleans the form from error messages.\n\nexports.clear = function(form) {\n\n    var errors = form.querySelectorAll('.error-message');\n    var error, i;\n\n    for (i = 0; i < errors.length; i++) {\n\n        error = errors.item(i);\n\n        error.parentNode.classList.remove('has-error');\n        error.parentNode.removeChild(error);\n    }\n\n    errors = form.parentNode.querySelectorAll('.alert-danger');\n\n    for (i = 0; i < errors.length; i++) {\n\n        error = errors.item(i);\n        error.parentNode.removeChild(error);\n    }\n};\n\n// Checks whether the form\n// has a validation error.\n\nexports.hasError = function(form) {\n\n    return form.querySelectorAll('.error-message').length > 0;\n};\n\n// Adds error to the container of the\n// given input.\n\nexports.error = function(id, message) {\n\n    var elem = document.getElementById(id);\n\n    var error = document.createElement('div');\n\n    error.className = 'error-message';\n    error.innerHTML = message;\n\n    elem.parentNode.appendChild(error);\n    elem.parentNode.classList.add('has-error');\n};\n\n// Sets error to the whole form.\n\nexports.formError = function(form, message) {\n\n    var error = document.createElement('div');\n\n    error.className = 'alert alert-danger';\n    error.innerHTML = message;\n\n    form.parentNode.insertBefore(error, form);\n};\n","var api = require('../api');\nvar message = require('../message');\nvar validate = require('../validate');\n\n// Creates post view model for already\n// existing post or a new post. For new\n// post, data must be unset. The authors\n// argument must contain the list of all\n// users.\n\nexports.create = function(authors, data) {\n\n    var myid = sessionStorage.getItem('user-id');\n\n    var mytype = sessionStorage.getItem('user-type');\n\n    // Sets author to the current user\n    // by default. Gets overriden by data.\n\n    var author = findAuthor(authors, myid);\n\n    var post = {\n\n        // List of authors. Used by the\n        // author list dropdown.\n\n        authors: authors,\n\n        // The post title. When this is\n        // the new post then initial slug\n        // is generated by it.\n\n        title: ko.observable('Untitled').trimmed(),\n\n        // The post slug. Can contain\n        // \"safe\" characters only.\n\n        slug: ko.observable('untitled').trimmed(),\n\n        // The post description. Can\n        // be left blank.\n\n        description: ko.observable('').trimmed(),\n\n        // The post content. Can be either\n        // Markdown or raw HTML.\n\n        content: ko.observable('').trimmed(),\n\n        // The post type. Currently\n        // available types are post,\n        // page and block.\n\n        type: ko.observable('post'),\n\n        // Type of the post content.\n        // Will be processed by the\n        // Markdown formatter when set\n        // to 'markdown''\n\n        content_type: ko.observable('markdown'),\n\n        // Flag to set whether the post\n        // is published or not.\n\n        published: ko.observable(false),\n\n        // Flag to set whether commenting\n        // is allowed or not.\n\n        commenting: ko.observable(true),\n\n        // List of tags. Tags are separated\n        // by commas.\n\n        tags: ko.observable('').trimmed(),\n\n        // The count of comments.\n        // Currently not used.\n\n        comments: ko.observable(0),\n\n\n        // Selected user. Only admins\n        // can select author other than\n        // themself.\n\n        author: ko.observable(author),\n\n        // Flag that indicates whether\n        // the current user can select\n        // the post author.\n\n        author_selectable: mytype === 'admin',\n\n        // Publish date as a string in\n        // the format YYYY-MM-DD. Might be\n        // unset when published flag is not set.\n\n        date: ko.observable('').trimmed(),\n\n        // Update date as a string in\n        // the format YYYY-MM-DD.\n\n        update: ko.observable('').trimmed(),\n\n        // Validates the post data.\n        // Saves or updates it using the API.\n\n        submit: function() {\n\n            submitPost(post, true);\n        },\n\n        // Similar to submit but leaves\n        // the form.\n\n        save: function() {\n\n            submitPost(post, false);\n        },\n\n        // Returns the plain data object\n        // to send to the backend.\n\n        toJS: function() {\n\n            var tags = post.tags().trim();\n\n            var date = post.date();\n\n            // date_published will be undefined when\n            // no date has been entered.\n\n            var date_published;\n\n            if (date !== '') {\n\n                date_published = isoDateToUnix(date);\n            }\n\n            var date_updated = isoDateToUnix(post.update());\n\n            return {\n\n                author: post.author().$id,\n                title: post.title(),\n                slug: post.slug(),\n                description: post.description(),\n                content: post.content(),\n                type: post.type(),\n                date_published: date_published,\n                date_updated: date_updated,\n                commenting: post.commenting(),\n                published: post.published(),\n                content_type: post.content_type(),\n                tags: tags === '' ? [] : tags.split(/\\, */)\n            };\n        }\n    };\n\n    // Sets the view model values by the\n    // actual data object.\n\n    if (data) {\n\n        author = findAuthor(authors, data.author);\n\n        // When the publish date is set then\n        // set the date field to formatted string.\n\n        if (typeof data.date_published !== 'undefined') {\n\n            var d = new Date(data.date_published * 1000);\n\n            post.date(d.toISOString().substring(0, 10));\n        }\n\n        post.$id = data.$id;\n        post.author(author);\n        post.title(data.title);\n        post.slug(data.slug);\n        post.description(data.description || '');\n        post.content(data.content);\n        post.type(data.type);\n        post.content_type(data.content_type);\n        post.published(data.published);\n        post.commenting(data.commenting);\n        post.tags(data.tags.join(', '));\n        post.comments(data.comments);\n\n    } else {\n\n        // Only when for new post.\n        // Add automatic slug generation.\n\n        post.title.subscribe(function(value) {\n\n            post.slug(speakingurl(value));\n        });\n    }\n\n    // Default update date is the current date.\n\n    post.update(new Date().toISOString().substring(0, 10));\n\n    post.published.subscribe(function(value) {\n\n        // Set publish date when post is published.\n        // Applies only when no publish date is set.\n\n        if (value && post.date() === '') {\n\n            post.date(new Date().toISOString().substring(0, 10));\n        }\n    });\n\n    return post;\n};\n\n// Finds matching author from the\n// array of authors.\n\nfunction findAuthor(authors, id) {\n\n    var author;\n\n    for (var i = 0; i < authors.length; i++) {\n\n        if (authors[i].$id === id) {\n\n            author = authors[i];\n\n            break;\n        }\n    }\n\n    if (!author) {\n\n        throw new Error('No author ' + data.author);\n    }\n\n    return author;\n}\n\n// Converts ISO8601 date part into\n// an Unix timestamp.\n\nfunction isoDateToUnix(string) {\n\n    var match = string.match(/^(\\d{4})\\-(\\d{2})\\-(\\d{2})$/);\n\n    if (!match) {\n\n        throw new Error('Date does not match pattern: ' + string);\n    }\n\n    var date = new Date();\n\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCFullYear(parseInt(match[1], 10), parseInt(match[2], 10) - 1, parseInt(match[3], 10));\n\n    return Math.floor(date.getTime() / 1000);\n}\n\n// Validates the given post.\n// Adds errors using the validate module.\n\nfunction validatePost(post) {\n\n    if (post.title() === '') {\n\n        validate.error('post-title', 'Title is not entered.');\n    }\n\n    var slug = post.slug();\n\n    if (slug === '') {\n\n        validate.error('post-slug', 'Slug is not entered.');\n\n    } else {\n\n        if (!slug.match(/^[a-z0-9\\-_]+$/)) {\n\n            validate.error('post-slug', 'Use lowercase letters, numbers, hyphen and underscore.');\n        }\n    }\n\n    if (post.content() === '') {\n\n        validate.error('post-content', 'Content is not entered.');\n    }\n\n    var date = post.date();\n\n    if (date === '') {\n\n        if (post.published()) {\n\n            validate.error('post-date', 'Publish date is not entered.');\n        }\n\n    } else if (!date.match(/^\\d{4}\\-\\d{2}\\-\\d{2}$/)) {\n\n        validate.error('post-date', 'Date must be in the YYYY-MM-DD format.');\n    }\n\n    var update = post.update();\n\n    if (update === '') {\n\n        validate.error('post-update', 'Update date is not entered.');\n\n    } else if (!update.match(/^\\d{4}\\-\\d{2}\\-\\d{2}$/)) {\n\n        validate.error('post-update', 'Update date must be in the YYYY-MM-DD format.');\n    }\n}\n\n// Handles save and\n// save-with-continue actions.\n\nfunction submitPost(post, edit) {\n\n    var form = document.getElementById('post-form');\n\n    validate.clear(form);\n\n    validatePost(post);\n\n    if (validate.hasError(form)) {\n\n        return false;\n    }\n\n    // When post has '$id' property\n    // then it's an existing post.\n\n    if (post.$id) {\n\n        updatePost(form, post, edit);\n\n    } else {\n\n        savePost(form, post, edit);\n    }\n}\n\n// Updates the already existing\n// post. Assumes that the post\n// is validated.\n\nfunction updatePost(form, post, edit) {\n\n    api.updatePost(post.$id, post.toJS()).then(function(response) {\n\n        if (response.status === 'success') {\n\n            message.info('Post updated.');\n\n            if (!edit) {\n\n                route.go(post.type() + 's');\n            }\n\n        } else {\n\n            validate.formError(form, response.message);\n\n            window.scroll(0, 0);\n        }\n\n    }, message.error).done();\n}\n\n// Saves the new post.\n\nfunction savePost(form, post, edit) {\n\n    api.savePost(post.toJS()).then(function(response) {\n\n        if (response.status === 'success') {\n\n            message.info('Post saved.');\n\n            // Redirect to post page when we\n            // want to keep editing the post.\n            // Otherwise go back to listing page.\n\n            if (edit) {\n\n                route.go(post.type() + '/' + response.data);\n\n            } else {\n\n                route.go(post.type() + 's');\n            }\n\n        } else {\n\n            validate.formError(form, response.message);\n\n            window.scroll(0, 0);\n        }\n\n    }, message.error).done();\n}\n","var message = require('../message');\nvar api = require('../api');\nvar validate = require('../validate');\n\nexports.create = function(data) {\n\n    var mytype = sessionStorage.getItem('user-type');\n\n    var user = {\n\n        username: ko.observable('').trimmed(),\n        fullname: ko.observable('').trimmed(),\n        type: ko.observable('author'),\n        link: ko.observable('').trimmed(),\n        password: ko.observable('').trimmed(),\n        password_edit: ko.observable(true),\n        password_text: ko.observable(false),\n        error: ko.observable(''),\n        creating: true,\n        files: ko.observable(false),\n        mytype: mytype,\n\n        save: function(form) {\n\n            validate.clear(form);\n\n            if (user.password_edit()) {\n\n                var password = user.password();\n\n                if (password === '') {\n\n                    validate.error('user-password', 'Password is not set.');\n\n                } else if (password.length < 6) {\n\n                    validate.error('user-password', 'Password length must be at least 6.');\n                }\n            }\n\n            var username = user.username();\n\n            if (username === '') {\n\n                validate.error('user-username', 'Username is not set.');\n\n            } else {\n\n                if (!username.match(/^[a-zA-Z0-9]+$/)) {\n\n                    validate.error('user-username', 'Use letters and numbers only.');\n                }\n            }\n\n            var fullname = user.fullname();\n\n            if (fullname === '') {\n\n                validate.error('user-fullname', 'Full name is not set.');\n            }\n\n            var link = user.link();\n\n            if (link !== '') {\n\n                if (!link.match(/https?:\\/\\//)) {\n\n                    validate.error('user-link', 'Link must start with http:// or https:// prefix.');\n                }\n            }\n\n            if (validate.hasError(form)) {\n\n                return false;\n            }\n\n            if (user.$id) {\n\n                api.updateUser(user.$id, user.toJS()).then(function(response) {\n\n                    if (response.status === 'success') {\n\n                        route.go('users');\n\n                    } else {\n\n                        validate.formError(form, response.message);\n                    }\n\n                }, message.error);\n\n            } else {\n\n                api.saveUser(user.toJS()).then(function(response) {\n\n                    if (response.status === 'success') {\n\n                        route.go('users');\n\n                    } else {\n\n                        validate.formError(form, response.message);\n                    }\n\n                }, message.error);\n            }\n\n            return false;\n        },\n\n        toJS: function() {\n\n            var js = {\n\n                username: user.username(),\n                fullname: user.fullname(),\n                type: user.type(),\n                link: user.link(),\n                files: user.files()\n            };\n\n            if (user.password_edit()) {\n\n                js.password = user.password();\n            }\n\n            return js;\n        }\n    };\n\n    user.password_text.subscribe(function(value) {\n\n        if (value) {\n\n            document.getElementById('user-password').type = 'text';\n\n        } else {\n\n            document.getElementById('user-password').type = 'password';\n        }\n    });\n\n    if (data) {\n\n        user.$id = data.$id;\n        user.creating = false;\n        user.username(data.username);\n        user.fullname(data.fullname);\n        user.type(data.type);\n        user.link(data.link);\n        user.password_edit(false);\n        user.files(data.files);\n    }\n\n    return user;\n};\n","exports.show = function() {\n\n    document.getElementById('spinner').style.display = 'block';\n};\n\nexports.hide = function() {\n\n    document.getElementById('spinner').style.display = 'none';\n};\n"]}